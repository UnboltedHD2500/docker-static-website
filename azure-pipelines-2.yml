trigger:
  branches:
    include:
    - master

pool:
  name: 'Default'
  vmImage: 'ubuntu-latest'

variables:
  containerRegistry: 'peckma'
  imageName: 'oneswoop'

stages:
- stage: Build
  displayName: 'Build and push Docker image'
  jobs:
  - job: Build
    displayName: 'Build'
    pool:
      name: 'Default'
      vmImage: 'ubuntu-latest'
    steps:
    - task: Docker@2
      displayName: 'Build and push Docker image'
      inputs:
        command: 'buildAndPush'
        repository: '$(containerRegistry)/$(imageName)'
        dockerfile: '**/Dockerfile'
        containerRegistry: 'DockerHub'
        tags: 'latest'
- stage: DeployToKubernetes
  jobs:
  - job: DeployJob
    steps:
    - script: |
        cat <<EOF > temp-deployment.yaml
        apiVersion: apps/v1
        kind: Deployment
        metadata:
          name: nginx-deployment
          labels:
            app: nginx
        spec:
          replicas: 1
          selector:
            matchLabels:
              app: nginx
          template:
            metadata:
              labels:
                app: nginx
            spec:
              containers:
              - name: webtest
                image: peckma/oneswoop:latest
                ports:
                - containerPort: 80
        ---
        apiVersion: v1
        kind: Service
        metadata:
          name: nginx-service
          labels:
            app: nginx
        spec:
          type: NodePort
          ports:
          - port: 80
            targetPort: 80
            nodePort: 30080
          selector:
            app: nginx
        EOF
      displayName: 'Generate Inline K8s Config'

    - task: Kubernetes@1
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'HomeKube'
        command: 'apply'
        useConfigurationFile: true
        configuration: 'temp-deployment.yaml'


